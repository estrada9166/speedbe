const mongoose = require('mongoose')
const validator = require('validator')
const mongodbErrorHandler = require('mongoose-mongodb-errors')
const { encryptFields } = require('mongoose-cipher')
const Schema = mongoose.Schema

const exampleSchema = new Schema({
  email: {
    type: String,
    unique: true,
    lowercase: true,
    trim: true,
    validate: [validator.isEmail, 'Invalid Email Address'],
    required: 'Please supply an email address'
  },
  name: {
    type: String,
    required: 'Please supply a name',
    trim: true
  },
  identificator: {
    type: String,
    required: 'Please supply a name',
    trim: true
  },
  testField: {
    type: String,
    required: 'Please supply a testField',
    trim: true
  },
  otherTestField: {
    type: String,
    required: 'Please supply a otherTestField',
    trim: true
  },
  created: {
    type: Date,
    default: Date.now()
  }
})

exampleSchema.plugin(mongodbErrorHandler)
exampleSchema.plugin(encryptFields, { fields: ['testField', 'otherTestField'], secret: process.env.MONGOOSE_ENCRYPT_KEY })

module.exports = mongoose.model('Example', exampleSchema)
